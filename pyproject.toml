[tool.poetry]
name = "pytest-embrace"
version = "4.0.0"
readme = "README.md"
description = "üíù  Dataclasses-as-tests. Describe the runtime once and multiply coverage with no boilerplate."
authors = ["Ainsley McGrath <mcgrath.ainsley@gmail.com>"]
classifiers = [
    "Environment :: Console",
    "Framework :: Pytest",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
    "Typing :: Typed"
]
packages = [
  { include = "pytest_embrace" },
  { include = "tests", format = "sdist" }
]

[tool.poetry.urls]
"GitHub" = "https://github.com/ainsleymcgrath/pytest-embrace"

[tool.poetry.dependencies]
python = "^3.8"
pytest = "^7.0"
pydantic = "^1.9.1"
pyperclip = "^1.8.2"
typing-extensions = "^4.4.0"
# these are used when rendering test files
black = "^22.3.0"
isort = "^5.10.1"

[tool.poetry.dev-dependencies]
mypy = "~1.0.0"
flake8 = "^4.0.1"
tox = "^3.25.0"
python-semantic-release = "^7.29.2"
tox-gh-actions = "^2.9.1"
ipython = "^8.4.0"
mkdocs = "^1.3.0"
mkdocs-material = "^8.3.8"
pdbpp = "^0.10.3"

[tool.poetry.plugins.pytest11]
pytest_embrace = "pytest_embrace.plugin"

[tool.poetry.scripts]
embrace = "pytest_embrace.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
disallow_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true
plugins = [
  "pydantic.mypy"
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "pytest",
  "_pytest.fixtures",
  "pyperclip",
  "jinja2",
  "black.*",
  "isort",
]

[tool.isort]
profile = "black"
add_imports  = "from __future__ import annotations"

[tool.semantic_release]
version_variable = [
    "pytest_embrace/__init__.py:__version__",
    "pyproject.toml:version"
]
build_command = "python -m pip install poetry && poetry build"
branch = "master"
upload_to_repository = true
upload_to_release = false

[tool.commitizen]
tag_format = "v$version"
